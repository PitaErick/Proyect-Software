I"‚<body style="background-color:#FFE5C7;font-family: Century Schoolbook">
<h4><b>¬øCu√°l es la diferencia entre ingenier√≠a de software y ciencias de la computaci√≥n?<br /></b></h4>
<p align="justify">Las ciencias de la computaci√≥n estan enfocadas en la teor√≠a y
fundamentos, en cambio la ingenier√≠a de software se enfoca en el sentido pr√°ctico del desarrollo y en la distribuci√≥n de software.</p>
<h4><b>¬øCu√°l es la diferencia entre ingenier√≠a de software e ingenier√≠a de sistemas?<br /></b></h4>
<p align="justify">La ingenier√≠a de sistemas se interesa por todos los aspectos del desarrollo de sistemas basados en computadoras, incluidos hardware, software e ingenier√≠a de procesos. La ingenier√≠a de software es parte de este proceso m√°s general.</p>
<br />
<a name="tema1.1"></a>
<br />
<hr size="5" style="background-color: lightseagreen" />
<br />
<h1 align="center"><b>DEFINICIONES Y OBJETIVOS DE LA INGENIERIA DE SOFTWARE</b></h1>
<h1 align="center"><b>¬øQue es Software?<br /></b></h1>
<p align="justify">Es un producto que dise√±an y construyen los ingenieros de software. Esto abarca programas que se ejecutan dentro de una computadora de cualquier tama√±o y arquitectura, documentos que comprenden formularios virtuales e impresos y datos que combinan n√∫meros y texto y tambi√©n incluyen representaciones de la informaci√≥n de audio, v√≠deo e im√°genes.</p>
<h1 align="left "><b>Objetivo<br /></b></h1>
<p align="justify"> Planificar el desarrollo del software como un proceso metodol√≥gico de construcci√≥n y de gesti√≥n de proyectos soportado en est√°ndares utilizados en la industria de la ingenier√≠a de software para dise√±ar software de calidad.</p>
<h4><b>Atributos de un buen software.<br /></b></h4>
<center>
	<img src="/Proyect-Software/img/tema1/figura2.png" /><br />
	<h5><i><u>figura 1: Referencia de un buen Software con sus atributos.</u></i></h5>
</center>
<p align="justify">El buen software debe entregar al usuario la funcionalidad y el desempe√±o requeridos, y debe ser sustentable, confiable y utilizable.<br />Los atributos esenciales de un buen software son:</p>
<ul>
	<li><b style="color: red">Mantenimiento.- </b> <p align="justify">El software debe escribirse de tal forma que pueda evolucionar para satisfacer las necesidades cambiantes de los clientes </p></li>
	<li><b style="color: red">Confiabilidad y seguridad.- </b><p align="justify"> La confiabilidad del software incluye una variedad de caracter√≠sticas que incluyen confiabilidad, seguridad y protecci√≥n, el software confiable no debe causar da√±os f√≠sicos o econ√≥micos en caso de falla del sistema.</p></li>
	<li><b style="color: red">Eficiencia.- </b><p align="justify">El software no debe desperdiciar los recursos del sistema, como la memoria y los ciclos del procesador. Por lo tanto, la eficiencia incluye la capacidad de respuesta, el tiempo de procesamiento, la utilizaci√≥n de la memoria, etc. </p></li>
	<li>
		<b style="color: red">Aceptabilidad.- </b><p align="justify">El software debe ser aceptable para el tipo de usuarios para el que est√° dise√±ado. Esto significa que debe ser comprensible, utilizable y compatible con otros sistemas que utilicen.</p>
	</li>
</ul>
<a name="tema1.2"></a>
<br />
<hr size="5" style="background-color: lightseagreen" />
<br />
<h1 align="center"><b>LA EVOLUCION DEL SOFTWARE</b></h1>
<b>Primeros a√±os (1950 - 1960)</b><br />
<ul>
	<li>Lo mas importante era el hardware, el software solo era un complemento.</li>
	<li>Se utilizaba el procesamiento por lotes.</li>
	<li>A√∫n no existia ninguna documentaci√≥n o metodolog√≠a.</li>
</ul>
<b>Segunda Era (1960 - 1970)</b><br />
<ul>
	<li>El software se considera un producto que se distribuye para macro y mini computadoras.</li>
	<li>Inicia la industria del software con la idea de desarrollar el mejor paquete y asi ganar dinero.</li>
	<li>Se introdujo nuevos conceptos de iteracci√≥n hombre-maquina, gracias a la multiprogramacion y sistemas multiusuario.</li>
	<li>El mantenimiento del software comenz√≥ a ser algo mucho mas cr√≠tico.</li>
</ul>
</body>
:ET